/*
 * Copyright (c) 2013 pixelflut GmbH, http://pixelflut.net
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 */

//
//  PxDrawService.h
//  PixLib-OpenSource
//
//  Created by Jonathan Cichon on 21.02.13.
//

#import <UIKit/UIKit.h>

/**
 Use this class for reusing draw methods in different places in one application. Images will be cached in memory as well as in the file-system.
 CGLayer will be cached only in memory. Using CGLayer for frequently drawn patterns can improve the performance of you application.
 */
@interface PxDrawService : NSObject

/** Creates a new image with given size with the image content generated by calling the block with user-defined drawing operations.
 
 The resulting image is saved to the file system and retrieved everytime the same reuseidentifier (+ size) is given.
 @param size The size of the resulting image.
 @param reuseIdentifier A string identifying the image object to be reused. If this parameter is **nil** no caching can pe applied.
 @param drawBlock The block with the user-defined drawing operations.
 @return The image.
 */
- (UIImage *)imageWithSize:(CGSize)size reuseIdentifier:(NSString *)reuseIdentifier drawingBlock:(void (^)(CGContextRef))drawBlock;

/** Creates a new layer with given size with the content generated by calling the block with user-defined drawing operations.
 
 The resulting layer is cached in memory and retrieved everytime the same reuseidentifier (+ size) is given.
 @param size The size of the resulting layer.
 @param reuseIdentifier A string identifying the layer object to be reused. If this parameter is **nil** no caching can pe applied.
 @param drawBlock The block with the user-defined drawing operations.
 @return The layer.
 */
- (CGLayerRef)layerWithSize:(CGSize)size reuseIdentifier:(NSString *)reuseIdentifier drawingBlock:(void (^)(CGContextRef))drawBlock;

/** Calls the given block with the current graphics context.
 @param drawBlock The block with the user-defined drawing operations.
 */
- (void)drawBlock:(void (^)(CGContextRef))drawBlock;

@end
